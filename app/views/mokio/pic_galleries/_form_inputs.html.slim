= render :partial => "mokio/common/main_pic", locals: {f:f}
= render :partial => "mokio/contents/common", locals: {f:f}
= render_backend_input_lang_id(f)
= render_backend_input_active(f)
= render_backend_input_home_page(f)
= f.input :title, disabled: !obj.display_editable_field?('title')
= f.input :subtitle, disabled: !obj.display_editable_field?('subtitle'), :as => :string
= f.input :intro,   :wrapper => :ckeditor,  :as => :ckeditor, :input_html => { :ckeditor => {:toolbar => 'Full', :height => 150, :language => I18n.locale} }, disabled: !obj.display_editable_field?('intro')
= f.input :content, :wrapper => :ckeditor,  :as => :ckeditor, :input_html => { :ckeditor => {:toolbar => 'Full', :height => 300, :language => I18n.locale} }, disabled: !obj.display_editable_field?('content')

= f.input :display_from, :wrapper => :date, :as => :string,   :input_html => { :class => "mask-date display_from", :value => (localize(f.object.display_from, :format => :datepicker) if f.object.display_from) },  disabled: !obj.display_editable_field?('display_from')
= f.input :display_to, :wrapper => :date, :as => :string,   :input_html => { :class => "mask-date display_to", :value => (localize(f.object.display_to, :format => :datepicker) if f.object.display_to) },  disabled: !obj.display_editable_field?('display_to')
.row-fluid
  label.form-label.span2
    = t('menus.content_assoc')
  .span10
    =collection_select(:pic_gallery, :menu_ids,menu_select_grouped(Mokio::Menu.all.includes(:content_links).arrange(:order => :seq)),:id,:name, {disabled: lambda{|s| s.fake.present? },selected:obj.menus.map {|j| j.id} },:multiple => true)
