.span12
  = render :partial => "mokio/common/notice"
  .box
    = box_title do
      = bt("new_title", @obj_class)
    .content
      = common_form do
        .row-fluid
          -langs.each.with_index(1) do |lang,index|
            .bs-example
              ul.nav.nav-tabs
                -if index == 1
                  li.active
                    a data-toggle="tab" href="#sectionA" =lang.shortname.html_safe
                -else
                  li
                    a data-toggle="tab" href="#sectionA" =lang.shortname.html_safe

            = simple_form_for obj, :html => { :class => 'form-horizontal' } do |f|
              = render :partial => "mokio/common/gmap", locals: {content: content, f: f} if content.class.has_gmap_enabled?
              = backend_modal_render('seo_tags',f)
              = render :partial => "#{content.class.to_s.tableize}/form", :locals => {f: f, content: content}

              - if params[:action] != "edit" || !has_data_files?(content)
                - cache [:form_buttons, content] do
                  .form-actions
                    = btn_submit bt("save")
                    = btn_submit bt("save_and_create_new"), true
                    = btn_cancel "#{engine_root}#{content.class.to_s.tableize.gsub("mokio/", "")}"

          - if has_data_files?(content) && params[:action] == "edit" && content.default_data_file != Mokio::Youtube
            = render :template => "mokio/data_files/uploader"
          - if has_data_files?(content) && content.default_data_file == Mokio::Youtube && params[:action] == "edit"
            = render :template => "mokio/youtubes/uploader"

        - if has_data_files?(content) && params[:action] == "edit"
          = render :partial => "#{content.default_data_file.to_s.tableize}/gallery", :locals => {videos: @videos}

      = render :partial => "mokio/common/datepicker_settings"

      - content_for :js do
        = javascript_include_tag 'backend/forms'

        - if has_data_files?(content) && params[:action] == "edit"
          = javascript_include_tag "backend/galleries"

        - if params[:action] == "new" && has_data_files?(content)
          = flash_message(bt("cannot_add_files_now", @content_class))

