= render :partial => "mokio/common/main_pic", locals: {f:f}
= f.input :lang_id, collection: Mokio::Lang.all.collect{|lang| [bt(lang.name), lang.id]},  include_blank: bt('all'), disabled: !obj.display_editable_field?('lang_id')
= f.input :active, :wrapper => :active_checkbox, disabled: !obj.display_editable_field?('active')
= f.input :home_page, :wrapper => :active_checkbox, disabled: !obj.display_editable_field?('home_page')
= f.input :title, disabled: !obj.display_editable_field?('title')
= f.input :subtitle, disabled: !obj.display_editable_field?('subtitle'), :as => :string
= render_ckeditor_field(f, { input_name: :intro, ckeditor_name: 'Mini', ckeditor_height: 150, disabled: !obj.display_editable_field?('intro') })
= render_ckeditor_field(f, { input_name: :content, ckeditor_name: 'Medium', ckeditor_height: 400, disabled: !obj.display_editable_field?('content') })
= f.input :display_from, :wrapper => :date, :as => :string,   :input_html => { :class => "mask-date display_from", :value => (localize(f.object.display_from, :format => :datepicker) if f.object.display_from) },  disabled: !obj.display_editable_field?('display_from')
= f.input :display_to, :wrapper => :date, :as => :string,   :input_html => { :class => "mask-date display_to", :value => (localize(f.object.display_to, :format => :datepicker) if f.object.display_to) },  disabled: !obj.display_editable_field?('display_to')
.row-fluid
  label.form-label.span2
    = t('menus.content_assoc')
  .span10
    =collection_select(:<%= file_name %>, :menu_ids,menu_select_grouped(Mokio::Menu.all.includes(:content_links).arrange(:order => :seq)),:id,:name, {disabled: lambda{|s| s.fake.present? },selected:obj.menus.map {|j| j.id} },:multiple => true)
